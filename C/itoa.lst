GAS LISTING /tmp/cctW0yvs.s 			page 1


   1              		.file	"itoa.c"
   2              		.intel_syntax noprefix
   3              		.text
   4              	.Ltext0:
   5              		.globl	get_str_size
   7              	get_str_size:
   8              	.LFB2:
   9              		.file 1 "itoa.c"
   1:itoa.c        **** #include <stdio.h>
   2:itoa.c        **** #include <stdlib.h>
   3:itoa.c        **** int get_str_size(int num, int power){
  10              		.loc 1 3 0
  11              		.cfi_startproc
  12 0000 55       		push	rbp
  13              	.LCFI0:
  14              		.cfi_def_cfa_offset 16
  15              		.cfi_offset 6, -16
  16 0001 4889E5   		mov	rbp, rsp
  17              	.LCFI1:
  18              		.cfi_def_cfa_register 6
  19 0004 4883EC10 		sub	rsp, 16
  20 0008 897DFC   		mov	DWORD PTR [rbp-4], edi
  21 000b 8975F8   		mov	DWORD PTR [rbp-8], esi
   4:itoa.c        **** 	if(num < 10) return power+1;
  22              		.loc 1 4 0
  23 000e 837DFC09 		cmp	DWORD PTR [rbp-4], 9
  24 0012 7F08     		jg	.L2
  25              		.loc 1 4 0 is_stmt 0 discriminator 1
  26 0014 8B45F8   		mov	eax, DWORD PTR [rbp-8]
  27 0017 83C001   		add	eax, 1
  28 001a EB26     		jmp	.L3
  29              	.L2:
   5:itoa.c        **** 	return get_str_size((num/10) , ++power);
  30              		.loc 1 5 0 is_stmt 1
  31 001c 8345F801 		add	DWORD PTR [rbp-8], 1
  32 0020 8B4DFC   		mov	ecx, DWORD PTR [rbp-4]
  33 0023 BA676666 		mov	edx, 1717986919
  33      66
  34 0028 89C8     		mov	eax, ecx
  35 002a F7EA     		imul	edx
  36 002c C1FA02   		sar	edx, 2
  37 002f 89C8     		mov	eax, ecx
  38 0031 C1F81F   		sar	eax, 31
  39 0034 29C2     		sub	edx, eax
  40 0036 8B45F8   		mov	eax, DWORD PTR [rbp-8]
  41 0039 89C6     		mov	esi, eax
  42 003b 89D7     		mov	edi, edx
  43 003d E8000000 		call	get_str_size
  43      00
  44              	.L3:
   6:itoa.c        **** }
  45              		.loc 1 6 0
  46 0042 C9       		leave
  47              	.LCFI2:
  48              		.cfi_def_cfa 7, 8
  49 0043 C3       		ret
  50              		.cfi_endproc
GAS LISTING /tmp/cctW0yvs.s 			page 2


  51              	.LFE2:
  53              		.globl	my_itoa
  55              	my_itoa:
  56              	.LFB3:
   7:itoa.c        **** void my_itoa(char *s, int num){
  57              		.loc 1 7 0
  58              		.cfi_startproc
  59 0044 55       		push	rbp
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 16
  62              		.cfi_offset 6, -16
  63 0045 4889E5   		mov	rbp, rsp
  64              	.LCFI4:
  65              		.cfi_def_cfa_register 6
  66 0048 48897DF8 		mov	QWORD PTR [rbp-8], rdi
  67 004c 8975F4   		mov	DWORD PTR [rbp-12], esi
   8:itoa.c        **** 	// int size = get_str_size(num,0);
   9:itoa.c        **** 	// char s[size];
  10:itoa.c        **** 	for(;*s;*s--=num%10+'0',num/=10)
  68              		.loc 1 10 0
  69 004f EB59     		jmp	.L5
  70              	.L6:
  11:itoa.c        **** 	*s = '\0';
  71              		.loc 1 11 0 discriminator 2
  72 0051 488B45F8 		mov	rax, QWORD PTR [rbp-8]
  73 0055 C60000   		mov	BYTE PTR [rax], 0
  10:itoa.c        **** 	for(;*s;*s--=num%10+'0',num/=10)
  74              		.loc 1 10 0 discriminator 2
  75 0058 8B4DF4   		mov	ecx, DWORD PTR [rbp-12]
  76 005b BA676666 		mov	edx, 1717986919
  76      66
  77 0060 89C8     		mov	eax, ecx
  78 0062 F7EA     		imul	edx
  79 0064 C1FA02   		sar	edx, 2
  80 0067 89C8     		mov	eax, ecx
  81 0069 C1F81F   		sar	eax, 31
  82 006c 29C2     		sub	edx, eax
  83 006e 89D0     		mov	eax, edx
  84 0070 C1E002   		sal	eax, 2
  85 0073 01D0     		add	eax, edx
  86 0075 01C0     		add	eax, eax
  87 0077 89CA     		mov	edx, ecx
  88 0079 29C2     		sub	edx, eax
  89 007b 89D0     		mov	eax, edx
  90 007d 83C030   		add	eax, 48
  91 0080 89C2     		mov	edx, eax
  92 0082 488B45F8 		mov	rax, QWORD PTR [rbp-8]
  93 0086 8810     		mov	BYTE PTR [rax], dl
  94 0088 48836DF8 		sub	QWORD PTR [rbp-8], 1
  94      01
  95 008d 8B4DF4   		mov	ecx, DWORD PTR [rbp-12]
  96 0090 BA676666 		mov	edx, 1717986919
  96      66
  97 0095 89C8     		mov	eax, ecx
  98 0097 F7EA     		imul	edx
  99 0099 C1FA02   		sar	edx, 2
 100 009c 89C8     		mov	eax, ecx
GAS LISTING /tmp/cctW0yvs.s 			page 3


 101 009e C1F81F   		sar	eax, 31
 102 00a1 89D1     		mov	ecx, edx
 103 00a3 29C1     		sub	ecx, eax
 104 00a5 89C8     		mov	eax, ecx
 105 00a7 8945F4   		mov	DWORD PTR [rbp-12], eax
 106              	.L5:
  10:itoa.c        **** 	for(;*s;*s--=num%10+'0',num/=10)
 107              		.loc 1 10 0 is_stmt 0 discriminator 1
 108 00aa 488B45F8 		mov	rax, QWORD PTR [rbp-8]
 109 00ae 0FB600   		movzx	eax, BYTE PTR [rax]
 110 00b1 84C0     		test	al, al
 111 00b3 759C     		jne	.L6
  12:itoa.c        **** 	// printf("%c\n", *s);
  13:itoa.c        **** 
  14:itoa.c        **** }
 112              		.loc 1 14 0 is_stmt 1
 113 00b5 5D       		pop	rbp
 114              	.LCFI5:
 115              		.cfi_def_cfa 7, 8
 116 00b6 C3       		ret
 117              		.cfi_endproc
 118              	.LFE3:
 120              		.section	.rodata
 121              	.LC0:
 122 0000 6E756D3A 		.string	"num: %d; power %d\n"
 122      2025643B 
 122      20706F77 
 122      65722025 
 122      640A00
 123              		.text
 124              		.globl	main
 126              	main:
 127              	.LFB4:
  15:itoa.c        **** 
  16:itoa.c        **** int main(){
 128              		.loc 1 16 0
 129              		.cfi_startproc
 130 00b7 55       		push	rbp
 131              	.LCFI6:
 132              		.cfi_def_cfa_offset 16
 133              		.cfi_offset 6, -16
 134 00b8 4889E5   		mov	rbp, rsp
 135              	.LCFI7:
 136              		.cfi_def_cfa_register 6
 137 00bb 53       		push	rbx
 138 00bc 4883EC38 		sub	rsp, 56
 139              		.cfi_offset 3, -24
 140 00c0 4889E0   		mov	rax, rsp
 141 00c3 4889C3   		mov	rbx, rax
  17:itoa.c        **** 	printf("num: %d; power %d\n", 1234, get_str_size(1234,0) );
 142              		.loc 1 17 0
 143 00c6 BE000000 		mov	esi, 0
 143      00
 144 00cb BFD20400 		mov	edi, 1234
 144      00
 145 00d0 E8000000 		call	get_str_size
 145      00
GAS LISTING /tmp/cctW0yvs.s 			page 4


 146 00d5 89C2     		mov	edx, eax
 147 00d7 BED20400 		mov	esi, 1234
 147      00
 148 00dc BF000000 		mov	edi, OFFSET FLAT:.LC0
 148      00
 149 00e1 B8000000 		mov	eax, 0
 149      00
 150 00e6 E8000000 		call	printf
 150      00
  18:itoa.c        **** 	int num = 1234;
 151              		.loc 1 18 0
 152 00eb C745D8D2 		mov	DWORD PTR [rbp-40], 1234
 152      040000
  19:itoa.c        **** 	const int size = get_str_size(num,0);
 153              		.loc 1 19 0
 154 00f2 8B45D8   		mov	eax, DWORD PTR [rbp-40]
 155 00f5 BE000000 		mov	esi, 0
 155      00
 156 00fa 89C7     		mov	edi, eax
 157 00fc E8000000 		call	get_str_size
 157      00
 158 0101 8945DC   		mov	DWORD PTR [rbp-36], eax
  20:itoa.c        **** 	char s[size];
 159              		.loc 1 20 0
 160 0104 8B45DC   		mov	eax, DWORD PTR [rbp-36]
 161 0107 4898     		cdqe
 162 0109 4883E801 		sub	rax, 1
 163 010d 488945E0 		mov	QWORD PTR [rbp-32], rax
 164 0111 8B45DC   		mov	eax, DWORD PTR [rbp-36]
 165 0114 4898     		cdqe
 166 0116 BA100000 		mov	edx, 16
 166      00
 167 011b 4883EA01 		sub	rdx, 1
 168 011f 4801D0   		add	rax, rdx
 169 0122 48C745C8 		mov	QWORD PTR [rbp-56], 16
 169      10000000 
 170 012a BA000000 		mov	edx, 0
 170      00
 171 012f 48F775C8 		div	QWORD PTR [rbp-56]
 172 0133 486BC010 		imul	rax, rax, 16
 173 0137 4829C4   		sub	rsp, rax
 174 013a 4889E0   		mov	rax, rsp
 175 013d 4883C000 		add	rax, 0
 176 0141 488945E8 		mov	QWORD PTR [rbp-24], rax
  21:itoa.c        **** 
  22:itoa.c        **** 	my_itoa(s+size-2, num);
 177              		.loc 1 22 0
 178 0145 488B45E8 		mov	rax, QWORD PTR [rbp-24]
 179 0149 8B55DC   		mov	edx, DWORD PTR [rbp-36]
 180 014c 4863D2   		movsx	rdx, edx
 181 014f 4883EA02 		sub	rdx, 2
 182 0153 4801C2   		add	rdx, rax
 183 0156 8B45D8   		mov	eax, DWORD PTR [rbp-40]
 184 0159 89C6     		mov	esi, eax
 185 015b 4889D7   		mov	rdi, rdx
 186 015e E8000000 		call	my_itoa
 186      00
GAS LISTING /tmp/cctW0yvs.s 			page 5


  23:itoa.c        **** 	printf("%s\n", s);
 187              		.loc 1 23 0
 188 0163 488B45E8 		mov	rax, QWORD PTR [rbp-24]
 189 0167 4889C7   		mov	rdi, rax
 190 016a E8000000 		call	puts
 190      00
  24:itoa.c        **** 	// char s[get_str_size(num,0)] = {0};
  25:itoa.c        **** 	return 0;
 191              		.loc 1 25 0
 192 016f B8000000 		mov	eax, 0
 192      00
 193 0174 4889DC   		mov	rsp, rbx
  26:itoa.c        **** }...
 194              		.loc 1 26 0
 195 0177 488B5DF8 		mov	rbx, QWORD PTR [rbp-8]
 196 017b C9       		leave
 197              	.LCFI8:
 198              		.cfi_def_cfa 7, 8
 199 017c C3       		ret
 200              		.cfi_endproc
 201              	.LFE4:
 203              	.Letext0:
GAS LISTING /tmp/cctW0yvs.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 itoa.c
     /tmp/cctW0yvs.s:7      .text:0000000000000000 get_str_size
     /tmp/cctW0yvs.s:55     .text:0000000000000044 my_itoa
     /tmp/cctW0yvs.s:126    .text:00000000000000b7 main

UNDEFINED SYMBOLS
printf
puts
