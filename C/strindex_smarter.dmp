
strindex_smarter:     file format elf64-x86-64


Disassembly of section .init:

0000000000400460 <_init>:
  400460:	48 83 ec 08          	sub    rsp,0x8
  400464:	48 8b 05 8d 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b8d]        # 600ff8 <_DYNAMIC+0x1d0>
  40046b:	48 85 c0             	test   rax,rax
  40046e:	74 05                	je     400475 <_init+0x15>
  400470:	e8 3b 00 00 00       	call   4004b0 <__gmon_start__@plt>
  400475:	48 83 c4 08          	add    rsp,0x8
  400479:	c3                   	ret    

Disassembly of section .plt:

0000000000400480 <__stack_chk_fail@plt-0x10>:
  400480:	ff 35 82 0b 20 00    	push   QWORD PTR [rip+0x200b82]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400486:	ff 25 84 0b 20 00    	jmp    QWORD PTR [rip+0x200b84]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40048c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400490 <__stack_chk_fail@plt>:
  400490:	ff 25 82 0b 20 00    	jmp    QWORD PTR [rip+0x200b82]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400496:	68 00 00 00 00       	push   0x0
  40049b:	e9 e0 ff ff ff       	jmp    400480 <_init+0x20>

00000000004004a0 <__libc_start_main@plt>:
  4004a0:	ff 25 7a 0b 20 00    	jmp    QWORD PTR [rip+0x200b7a]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004a6:	68 01 00 00 00       	push   0x1
  4004ab:	e9 d0 ff ff ff       	jmp    400480 <_init+0x20>

00000000004004b0 <__gmon_start__@plt>:
  4004b0:	ff 25 72 0b 20 00    	jmp    QWORD PTR [rip+0x200b72]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004b6:	68 02 00 00 00       	push   0x2
  4004bb:	e9 c0 ff ff ff       	jmp    400480 <_init+0x20>

00000000004004c0 <__printf_chk@plt>:
  4004c0:	ff 25 6a 0b 20 00    	jmp    QWORD PTR [rip+0x200b6a]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004c6:	68 03 00 00 00       	push   0x3
  4004cb:	e9 b0 ff ff ff       	jmp    400480 <_init+0x20>

Disassembly of section .text:

00000000004004d0 <main>:
  4004d0:	41 56                	push   r14
  4004d2:	be c8 09 40 00       	mov    esi,0x4009c8
  4004d7:	b9 19 00 00 00       	mov    ecx,0x19
  4004dc:	48 ba 76 76 76 76 76 	movabs rdx,0x7676767676767676
  4004e3:	76 76 76 
  4004e6:	41 55                	push   r13
  4004e8:	41 54                	push   r12
  4004ea:	55                   	push   rbp
  4004eb:	53                   	push   rbx
  4004ec:	48 81 ec 30 01 00 00 	sub    rsp,0x130
  4004f3:	48 8d 6c 24 50       	lea    rbp,[rsp+0x50]
  4004f8:	c7 44 24 20 61 62 63 	mov    DWORD PTR [rsp+0x20],0x64636261
  4004ff:	64 
  400500:	c6 44 24 24 00       	mov    BYTE PTR [rsp+0x24],0x0
  400505:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  40050c:	00 00 
  40050e:	48 89 84 24 28 01 00 	mov    QWORD PTR [rsp+0x128],rax
  400515:	00 
  400516:	31 c0                	xor    eax,eax
  400518:	48 89 ef             	mov    rdi,rbp
  40051b:	66 c7 04 24 62 63    	mov    WORD PTR [rsp],0x6362
  400521:	c6 44 24 02 00       	mov    BYTE PTR [rsp+0x2],0x0
  400526:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  400529:	66 c7 44 24 10 66 65 	mov    WORD PTR [rsp+0x10],0x6566
  400530:	c6 44 24 12 00       	mov    BYTE PTR [rsp+0x12],0x0
  400535:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
  40053a:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
  40053f:	0f b6 4c 24 20       	movzx  ecx,BYTE PTR [rsp+0x20]
  400544:	48 89 54 24 40       	mov    QWORD PTR [rsp+0x40],rdx
  400549:	c7 44 24 48 76 76 61 	mov    DWORD PTR [rsp+0x48],0x62617676
  400550:	62 
  400551:	66 c7 44 24 4c 61 61 	mov    WORD PTR [rsp+0x4c],0x6161
  400558:	c6 44 24 4e 00       	mov    BYTE PTR [rsp+0x4e],0x0
  40055d:	0f b7 06             	movzx  eax,WORD PTR [rsi]
  400560:	84 c9                	test   cl,cl
  400562:	66 89 07             	mov    WORD PTR [rdi],ax
  400565:	0f b6 05 26 05 00 00 	movzx  eax,BYTE PTR [rip+0x526]        # 400a92 <_IO_stdin_used+0x102>
  40056c:	88 47 02             	mov    BYTE PTR [rdi+0x2],al
  40056f:	0f 84 f4 01 00 00    	je     400769 <main+0x299>
  400575:	0f b6 3c 24          	movzx  edi,BYTE PTR [rsp]
  400579:	48 8d 5c 24 20       	lea    rbx,[rsp+0x20]
  40057e:	31 f6                	xor    esi,esi
  400580:	40 84 ff             	test   dil,dil
  400583:	41 89 f0             	mov    r8d,esi
  400586:	74 1f                	je     4005a7 <main+0xd7>
  400588:	40 38 cf             	cmp    dil,cl
  40058b:	74 33                	je     4005c0 <main+0xf0>
  40058d:	48 89 e0             	mov    rax,rsp
  400590:	eb 0a                	jmp    40059c <main+0xcc>
  400592:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  400598:	38 ca                	cmp    dl,cl
  40059a:	74 24                	je     4005c0 <main+0xf0>
  40059c:	48 83 c0 01          	add    rax,0x1
  4005a0:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  4005a3:	84 d2                	test   dl,dl
  4005a5:	75 f1                	jne    400598 <main+0xc8>
  4005a7:	48 83 c6 01          	add    rsi,0x1
  4005ab:	0f b6 0c 33          	movzx  ecx,BYTE PTR [rbx+rsi*1]
  4005af:	84 c9                	test   cl,cl
  4005b1:	75 cd                	jne    400580 <main+0xb0>
  4005b3:	41 83 c8 ff          	or     r8d,0xffffffff
  4005b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4005be:	00 00 
  4005c0:	48 89 e1             	mov    rcx,rsp
  4005c3:	31 c0                	xor    eax,eax
  4005c5:	48 89 da             	mov    rdx,rbx
  4005c8:	be 94 09 40 00       	mov    esi,0x400994
  4005cd:	bf 01 00 00 00       	mov    edi,0x1
  4005d2:	e8 e9 fe ff ff       	call   4004c0 <__printf_chk@plt>
  4005d7:	0f b6 4c 24 20       	movzx  ecx,BYTE PTR [rsp+0x20]
  4005dc:	84 c9                	test   cl,cl
  4005de:	0f 84 93 01 00 00    	je     400777 <main+0x2a7>
  4005e4:	0f b6 7c 24 10       	movzx  edi,BYTE PTR [rsp+0x10]
  4005e9:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
  4005ee:	31 f6                	xor    esi,esi
  4005f0:	40 84 ff             	test   dil,dil
  4005f3:	41 89 f0             	mov    r8d,esi
  4005f6:	74 1f                	je     400617 <main+0x147>
  4005f8:	40 38 cf             	cmp    dil,cl
  4005fb:	74 33                	je     400630 <main+0x160>
  4005fd:	4c 89 e8             	mov    rax,r13
  400600:	eb 0a                	jmp    40060c <main+0x13c>
  400602:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  400608:	38 ca                	cmp    dl,cl
  40060a:	74 24                	je     400630 <main+0x160>
  40060c:	48 83 c0 01          	add    rax,0x1
  400610:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  400613:	84 d2                	test   dl,dl
  400615:	75 f1                	jne    400608 <main+0x138>
  400617:	48 83 c6 01          	add    rsi,0x1
  40061b:	0f b6 0c 33          	movzx  ecx,BYTE PTR [rbx+rsi*1]
  40061f:	84 c9                	test   cl,cl
  400621:	75 cd                	jne    4005f0 <main+0x120>
  400623:	41 83 c8 ff          	or     r8d,0xffffffff
  400627:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40062e:	00 00 
  400630:	4c 89 e9             	mov    rcx,r13
  400633:	31 c0                	xor    eax,eax
  400635:	48 89 da             	mov    rdx,rbx
  400638:	be 94 09 40 00       	mov    esi,0x400994
  40063d:	bf 01 00 00 00       	mov    edi,0x1
  400642:	e8 79 fe ff ff       	call   4004c0 <__printf_chk@plt>
  400647:	0f b6 4c 24 20       	movzx  ecx,BYTE PTR [rsp+0x20]
  40064c:	84 c9                	test   cl,cl
  40064e:	0f 84 31 01 00 00    	je     400785 <main+0x2b5>
  400654:	0f b6 7c 24 30       	movzx  edi,BYTE PTR [rsp+0x30]
  400659:	4c 8d 74 24 30       	lea    r14,[rsp+0x30]
  40065e:	31 f6                	xor    esi,esi
  400660:	40 84 ff             	test   dil,dil
  400663:	41 89 f0             	mov    r8d,esi
  400666:	74 1f                	je     400687 <main+0x1b7>
  400668:	40 38 cf             	cmp    dil,cl
  40066b:	74 33                	je     4006a0 <main+0x1d0>
  40066d:	4c 89 f0             	mov    rax,r14
  400670:	eb 0a                	jmp    40067c <main+0x1ac>
  400672:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  400678:	38 ca                	cmp    dl,cl
  40067a:	74 24                	je     4006a0 <main+0x1d0>
  40067c:	48 83 c0 01          	add    rax,0x1
  400680:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  400683:	84 d2                	test   dl,dl
  400685:	75 f1                	jne    400678 <main+0x1a8>
  400687:	48 83 c6 01          	add    rsi,0x1
  40068b:	0f b6 0c 33          	movzx  ecx,BYTE PTR [rbx+rsi*1]
  40068f:	84 c9                	test   cl,cl
  400691:	75 cd                	jne    400660 <main+0x190>
  400693:	41 83 c8 ff          	or     r8d,0xffffffff
  400697:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40069e:	00 00 
  4006a0:	48 89 da             	mov    rdx,rbx
  4006a3:	31 c0                	xor    eax,eax
  4006a5:	4c 89 f1             	mov    rcx,r14
  4006a8:	be 94 09 40 00       	mov    esi,0x400994
  4006ad:	bf 01 00 00 00       	mov    edi,0x1
  4006b2:	e8 09 fe ff ff       	call   4004c0 <__printf_chk@plt>
  4006b7:	0f b6 54 24 20       	movzx  edx,BYTE PTR [rsp+0x20]
  4006bc:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
  4006c2:	84 d2                	test   dl,dl
  4006c4:	74 4a                	je     400710 <main+0x240>
  4006c6:	0f b6 7c 24 50       	movzx  edi,BYTE PTR [rsp+0x50]
  4006cb:	31 c9                	xor    ecx,ecx
  4006cd:	0f 1f 00             	nop    DWORD PTR [rax]
  4006d0:	40 84 ff             	test   dil,dil
  4006d3:	41 89 c8             	mov    r8d,ecx
  4006d6:	74 21                	je     4006f9 <main+0x229>
  4006d8:	40 38 d7             	cmp    dil,dl
  4006db:	74 33                	je     400710 <main+0x240>
  4006dd:	48 89 e8             	mov    rax,rbp
  4006e0:	eb 0b                	jmp    4006ed <main+0x21d>
  4006e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  4006e8:	40 38 d6             	cmp    sil,dl
  4006eb:	74 23                	je     400710 <main+0x240>
  4006ed:	48 83 c0 01          	add    rax,0x1
  4006f1:	0f b6 30             	movzx  esi,BYTE PTR [rax]
  4006f4:	40 84 f6             	test   sil,sil
  4006f7:	75 ef                	jne    4006e8 <main+0x218>
  4006f9:	48 83 c1 01          	add    rcx,0x1
  4006fd:	0f b6 14 0b          	movzx  edx,BYTE PTR [rbx+rcx*1]
  400701:	84 d2                	test   dl,dl
  400703:	75 cb                	jne    4006d0 <main+0x200>
  400705:	41 83 c8 ff          	or     r8d,0xffffffff
  400709:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
  400710:	48 89 e9             	mov    rcx,rbp
  400713:	48 89 da             	mov    rdx,rbx
  400716:	be 94 09 40 00       	mov    esi,0x400994
  40071b:	bf 01 00 00 00       	mov    edi,0x1
  400720:	31 c0                	xor    eax,eax
  400722:	e8 99 fd ff ff       	call   4004c0 <__printf_chk@plt>
  400727:	48 89 da             	mov    rdx,rbx
  40072a:	31 c0                	xor    eax,eax
  40072c:	4d 89 f1             	mov    r9,r14
  40072f:	4d 89 e8             	mov    r8,r13
  400732:	48 89 e1             	mov    rcx,rsp
  400735:	be aa 09 40 00       	mov    esi,0x4009aa
  40073a:	bf 01 00 00 00       	mov    edi,0x1
  40073f:	e8 7c fd ff ff       	call   4004c0 <__printf_chk@plt>
  400744:	31 c0                	xor    eax,eax
  400746:	48 8b 94 24 28 01 00 	mov    rdx,QWORD PTR [rsp+0x128]
  40074d:	00 
  40074e:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
  400755:	00 00 
  400757:	75 3a                	jne    400793 <main+0x2c3>
  400759:	48 81 c4 30 01 00 00 	add    rsp,0x130
  400760:	5b                   	pop    rbx
  400761:	5d                   	pop    rbp
  400762:	41 5c                	pop    r12
  400764:	41 5d                	pop    r13
  400766:	41 5e                	pop    r14
  400768:	c3                   	ret    
  400769:	41 83 c8 ff          	or     r8d,0xffffffff
  40076d:	48 8d 5c 24 20       	lea    rbx,[rsp+0x20]
  400772:	e9 49 fe ff ff       	jmp    4005c0 <main+0xf0>
  400777:	41 83 c8 ff          	or     r8d,0xffffffff
  40077b:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
  400780:	e9 ab fe ff ff       	jmp    400630 <main+0x160>
  400785:	41 83 c8 ff          	or     r8d,0xffffffff
  400789:	4c 8d 74 24 30       	lea    r14,[rsp+0x30]
  40078e:	e9 0d ff ff ff       	jmp    4006a0 <main+0x1d0>
  400793:	e8 f8 fc ff ff       	call   400490 <__stack_chk_fail@plt>

0000000000400798 <_start>:
  400798:	31 ed                	xor    ebp,ebp
  40079a:	49 89 d1             	mov    r9,rdx
  40079d:	5e                   	pop    rsi
  40079e:	48 89 e2             	mov    rdx,rsp
  4007a1:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4007a5:	50                   	push   rax
  4007a6:	54                   	push   rsp
  4007a7:	49 c7 c0 80 09 40 00 	mov    r8,0x400980
  4007ae:	48 c7 c1 f0 08 40 00 	mov    rcx,0x4008f0
  4007b5:	48 c7 c7 d0 04 40 00 	mov    rdi,0x4004d0
  4007bc:	e8 df fc ff ff       	call   4004a0 <__libc_start_main@plt>
  4007c1:	f4                   	hlt    
  4007c2:	66 90                	xchg   ax,ax
  4007c4:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4007cb:	00 00 00 
  4007ce:	66 90                	xchg   ax,ax

00000000004007d0 <deregister_tm_clones>:
  4007d0:	b8 4f 10 60 00       	mov    eax,0x60104f
  4007d5:	55                   	push   rbp
  4007d6:	48 2d 48 10 60 00    	sub    rax,0x601048
  4007dc:	48 83 f8 0e          	cmp    rax,0xe
  4007e0:	48 89 e5             	mov    rbp,rsp
  4007e3:	77 02                	ja     4007e7 <deregister_tm_clones+0x17>
  4007e5:	5d                   	pop    rbp
  4007e6:	c3                   	ret    
  4007e7:	b8 00 00 00 00       	mov    eax,0x0
  4007ec:	48 85 c0             	test   rax,rax
  4007ef:	74 f4                	je     4007e5 <deregister_tm_clones+0x15>
  4007f1:	5d                   	pop    rbp
  4007f2:	bf 48 10 60 00       	mov    edi,0x601048
  4007f7:	ff e0                	jmp    rax
  4007f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000400800 <register_tm_clones>:
  400800:	b8 48 10 60 00       	mov    eax,0x601048
  400805:	55                   	push   rbp
  400806:	48 2d 48 10 60 00    	sub    rax,0x601048
  40080c:	48 c1 f8 03          	sar    rax,0x3
  400810:	48 89 e5             	mov    rbp,rsp
  400813:	48 89 c2             	mov    rdx,rax
  400816:	48 c1 ea 3f          	shr    rdx,0x3f
  40081a:	48 01 d0             	add    rax,rdx
  40081d:	48 89 c6             	mov    rsi,rax
  400820:	48 d1 fe             	sar    rsi,1
  400823:	75 02                	jne    400827 <register_tm_clones+0x27>
  400825:	5d                   	pop    rbp
  400826:	c3                   	ret    
  400827:	ba 00 00 00 00       	mov    edx,0x0
  40082c:	48 85 d2             	test   rdx,rdx
  40082f:	74 f4                	je     400825 <register_tm_clones+0x25>
  400831:	5d                   	pop    rbp
  400832:	bf 48 10 60 00       	mov    edi,0x601048
  400837:	ff e2                	jmp    rdx
  400839:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000400840 <__do_global_dtors_aux>:
  400840:	80 3d 01 08 20 00 00 	cmp    BYTE PTR [rip+0x200801],0x0        # 601048 <__TMC_END__>
  400847:	75 11                	jne    40085a <__do_global_dtors_aux+0x1a>
  400849:	55                   	push   rbp
  40084a:	48 89 e5             	mov    rbp,rsp
  40084d:	e8 7e ff ff ff       	call   4007d0 <deregister_tm_clones>
  400852:	5d                   	pop    rbp
  400853:	c6 05 ee 07 20 00 01 	mov    BYTE PTR [rip+0x2007ee],0x1        # 601048 <__TMC_END__>
  40085a:	f3 c3                	repz ret 
  40085c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400860 <frame_dummy>:
  400860:	48 83 3d b8 05 20 00 	cmp    QWORD PTR [rip+0x2005b8],0x0        # 600e20 <__JCR_END__>
  400867:	00 
  400868:	74 1b                	je     400885 <frame_dummy+0x25>
  40086a:	b8 00 00 00 00       	mov    eax,0x0
  40086f:	48 85 c0             	test   rax,rax
  400872:	74 11                	je     400885 <frame_dummy+0x25>
  400874:	55                   	push   rbp
  400875:	bf 20 0e 60 00       	mov    edi,0x600e20
  40087a:	48 89 e5             	mov    rbp,rsp
  40087d:	ff d0                	call   rax
  40087f:	5d                   	pop    rbp
  400880:	e9 7b ff ff ff       	jmp    400800 <register_tm_clones>
  400885:	e9 76 ff ff ff       	jmp    400800 <register_tm_clones>
  40088a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400890 <strindex>:
  400890:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
  400894:	b8 ff ff ff ff       	mov    eax,0xffffffff
  400899:	45 84 c0             	test   r8b,r8b
  40089c:	74 45                	je     4008e3 <strindex+0x53>
  40089e:	44 0f b6 16          	movzx  r10d,BYTE PTR [rsi]
  4008a2:	45 31 c9             	xor    r9d,r9d
  4008a5:	0f 1f 00             	nop    DWORD PTR [rax]
  4008a8:	45 84 d2             	test   r10b,r10b
  4008ab:	44 89 c8             	mov    eax,r9d
  4008ae:	74 20                	je     4008d0 <strindex+0x40>
  4008b0:	45 38 c2             	cmp    r10b,r8b
  4008b3:	74 35                	je     4008ea <strindex+0x5a>
  4008b5:	48 89 f2             	mov    rdx,rsi
  4008b8:	eb 0b                	jmp    4008c5 <strindex+0x35>
  4008ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  4008c0:	41 38 c8             	cmp    r8b,cl
  4008c3:	74 23                	je     4008e8 <strindex+0x58>
  4008c5:	48 83 c2 01          	add    rdx,0x1
  4008c9:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
  4008cc:	84 c9                	test   cl,cl
  4008ce:	75 f0                	jne    4008c0 <strindex+0x30>
  4008d0:	49 83 c1 01          	add    r9,0x1
  4008d4:	46 0f b6 04 0f       	movzx  r8d,BYTE PTR [rdi+r9*1]
  4008d9:	45 84 c0             	test   r8b,r8b
  4008dc:	75 ca                	jne    4008a8 <strindex+0x18>
  4008de:	b8 ff ff ff ff       	mov    eax,0xffffffff
  4008e3:	f3 c3                	repz ret 
  4008e5:	0f 1f 00             	nop    DWORD PTR [rax]
  4008e8:	f3 c3                	repz ret 
  4008ea:	f3 c3                	repz ret 
  4008ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004008f0 <__libc_csu_init>:
  4008f0:	48 89 6c 24 d8       	mov    QWORD PTR [rsp-0x28],rbp
  4008f5:	4c 89 64 24 e0       	mov    QWORD PTR [rsp-0x20],r12
  4008fa:	48 8d 2d 17 05 20 00 	lea    rbp,[rip+0x200517]        # 600e18 <__init_array_end>
  400901:	4c 8d 25 08 05 20 00 	lea    r12,[rip+0x200508]        # 600e10 <__frame_dummy_init_array_entry>
  400908:	48 89 5c 24 d0       	mov    QWORD PTR [rsp-0x30],rbx
  40090d:	4c 89 6c 24 e8       	mov    QWORD PTR [rsp-0x18],r13
  400912:	4c 89 74 24 f0       	mov    QWORD PTR [rsp-0x10],r14
  400917:	4c 89 7c 24 f8       	mov    QWORD PTR [rsp-0x8],r15
  40091c:	48 83 ec 38          	sub    rsp,0x38
  400920:	4c 29 e5             	sub    rbp,r12
  400923:	41 89 ff             	mov    r15d,edi
  400926:	49 89 f6             	mov    r14,rsi
  400929:	48 c1 fd 03          	sar    rbp,0x3
  40092d:	49 89 d5             	mov    r13,rdx
  400930:	31 db                	xor    ebx,ebx
  400932:	e8 29 fb ff ff       	call   400460 <_init>
  400937:	48 85 ed             	test   rbp,rbp
  40093a:	74 1a                	je     400956 <__libc_csu_init+0x66>
  40093c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400940:	4c 89 ea             	mov    rdx,r13
  400943:	4c 89 f6             	mov    rsi,r14
  400946:	44 89 ff             	mov    edi,r15d
  400949:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40094d:	48 83 c3 01          	add    rbx,0x1
  400951:	48 39 eb             	cmp    rbx,rbp
  400954:	75 ea                	jne    400940 <__libc_csu_init+0x50>
  400956:	48 8b 5c 24 08       	mov    rbx,QWORD PTR [rsp+0x8]
  40095b:	48 8b 6c 24 10       	mov    rbp,QWORD PTR [rsp+0x10]
  400960:	4c 8b 64 24 18       	mov    r12,QWORD PTR [rsp+0x18]
  400965:	4c 8b 6c 24 20       	mov    r13,QWORD PTR [rsp+0x20]
  40096a:	4c 8b 74 24 28       	mov    r14,QWORD PTR [rsp+0x28]
  40096f:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
  400974:	48 83 c4 38          	add    rsp,0x38
  400978:	c3                   	ret    
  400979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000400980 <__libc_csu_fini>:
  400980:	f3 c3                	repz ret 
  400982:	66 90                	xchg   ax,ax

Disassembly of section .fini:

0000000000400984 <_fini>:
  400984:	48 83 ec 08          	sub    rsp,0x8
  400988:	48 83 c4 08          	add    rsp,0x8
  40098c:	c3                   	ret    
